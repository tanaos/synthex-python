name: Python CI/CD

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  test-and-build:
    if: github.event_name == 'push'
    name: Run Tests and Build
    runs-on: ubuntu-latest

    outputs:
      artifact_name: dist-artifacts

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest build

      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.SYNTHEX_API_KEY }}" > .env

      - name: Run tests
        run: pytest

      - name: Build the package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

  publish-to-pypi:
    if: github.event_name == 'release'
    name: Publish to PyPI
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Install Twine
        run: python -m pip install --upgrade pip twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
